pipeline {
    agent any
    environment {
        PATH = "${env.PATH}:/opt/sonarqube/bin:/opt/sonar-scanner-6.2.1.4610-linux-x64/bin"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip install pytest'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'python3 -m pytest test_addition.py'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQubeManual1') { // 'SonarQube' is the name of the SonarQube server configured in Jenkins
                    sh '''
                        sonar-scanner \
                            -Dsonar.projectKey=SonarQubeManual1 \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=http://localhost:9000 \
                            -Dsonar.login=Analyze "SonarQubeManual1"
                        '''
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }
}